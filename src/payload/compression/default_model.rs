//! Default model used for payload compression.
//! Values have been obtained by looking at what bytes
//! most commonly occur in Secure Domain Firmware hexes.
//! Precision is set to be 16 bit probability quantization.

use super::Model;

pub fn model() -> Model<u8> {
    let symbols = [
        (0x00, 13923),
        (0x01, 1518),
        (0x02, 834),
        (0x03, 1232),
        (0x04, 781),
        (0x05, 392),
        (0x06, 352),
        (0x07, 385),
        (0x08, 653),
        (0x09, 324),
        (0x0a, 272),
        (0x0b, 232),
        (0x0c, 286),
        (0x0d, 164),
        (0x0e, 162),
        (0x0f, 303),
        (0x10, 499),
        (0x11, 263),
        (0x12, 202),
        (0x13, 204),
        (0x14, 204),
        (0x15, 145),
        (0x16, 137),
        (0x17, 78),
        (0x18, 333),
        (0x19, 69),
        (0x1a, 145),
        (0x1b, 116),
        (0x1c, 107),
        (0x1d, 57),
        (0x1e, 2647),
        (0x1f, 107),
        (0x20, 971),
        (0x21, 297),
        (0x22, 288),
        (0x23, 482),
        (0x24, 173),
        (0x25, 141),
        (0x26, 116),
        (0x27, 97),
        (0x28, 310),
        (0x29, 116),
        (0x2a, 150),
        (0x2b, 232),
        (0x2c, 112),
        (0x2d, 152),
        (0x2e, 34),
        (0x2f, 74),
        (0x30, 486),
        (0x31, 478),
        (0x32, 112),
        (0x33, 139),
        (0x34, 126),
        (0x35, 103),
        (0x36, 15),
        (0x37, 36),
        (0x38, 168),
        (0x39, 84),
        (0x3a, 53),
        (0x3b, 80),
        (0x3c, 72),
        (0x3d, 32),
        (0x3e, 95),
        (0x3f, 107),
        (0x40, 354),
        (0x41, 145),
        (0x42, 377),
        (0x43, 343),
        (0x44, 152),
        (0x45, 101),
        (0x46, 1021),
        (0x47, 1257),
        (0x48, 171),
        (0x49, 112),
        (0x4a, 124),
        (0x4b, 381),
        (0x4c, 88),
        (0x4d, 88),
        (0x4e, 46),
        (0x4f, 459),
        (0x50, 101),
        (0x51, 53),
        (0x52, 93),
        (0x53, 112),
        (0x54, 93),
        (0x55, 36),
        (0x56, 46),
        (0x57, 21),
        (0x58, 99),
        (0x59, 44),
        (0x5a, 63),
        (0x5b, 55),
        (0x5c, 57),
        (0x5d, 48),
        (0x5e, 8),
        (0x5f, 211),
        (0x60, 345),
        (0x61, 133),
        (0x62, 93),
        (0x63, 110),
        (0x64, 53),
        (0x65, 67),
        (0x66, 1044),
        (0x67, 53),
        (0x68, 522),
        (0x69, 135),
        (0x6a, 107),
        (0x6b, 32),
        (0x6c, 59),
        (0x6d, 32),
        (0x6e, 29),
        (0x6f, 385),
        (0x70, 423),
        (0x71, 27),
        (0x72, 116),
        (0x73, 141),
        (0x74, 74),
        (0x75, 29),
        (0x76, 29),
        (0x77, 32),
        (0x78, 145),
        (0x79, 76),
        (0x7a, 21),
        (0x7b, 67),
        (0x7c, 21),
        (0x7d, 25),
        (0x7e, 13),
        (0x7f, 88),
        (0x80, 423),
        (0x81, 128),
        (0x82, 63),
        (0x83, 198),
        (0x84, 110),
        (0x85, 44),
        (0x86, 74),
        (0x87, 44),
        (0x88, 211),
        (0x89, 1044),
        (0x8a, 40),
        (0x8b, 36),
        (0x8c, 61),
        (0x8d, 1198),
        (0x8e, 21),
        (0x8f, 211),
        (0x90, 137),
        (0x91, 38),
        (0x92, 82),
        (0x93, 181),
        (0x94, 105),
        (0x95, 53),
        (0x96, 46),
        (0x97, 32),
        (0x98, 143),
        (0x99, 34),
        (0x9a, 126),
        (0x9b, 128),
        (0x9c, 78),
        (0x9d, 128),
        (0x9e, 59),
        (0x9f, 36),
        (0xa0, 110),
        (0xa1, 21),
        (0xa2, 53),
        (0xa3, 80),
        (0xa4, 78),
        (0xa5, 34),
        (0xa6, 36),
        (0xa7, 44),
        (0xa8, 122),
        (0xa9, 84),
        (0xaa, 44),
        (0xab, 44),
        (0xac, 67),
        (0xad, 34),
        (0xae, 15),
        (0xaf, 21),
        (0xb0, 232),
        (0xb1, 238),
        (0xb2, 354),
        (0xb3, 107),
        (0xb4, 103),
        (0xb5, 280),
        (0xb6, 23),
        (0xb7, 17),
        (0xb8, 82),
        (0xb9, 135),
        (0xba, 32),
        (0xbb, 44),
        (0xbc, 34),
        (0xbd, 356),
        (0xbe, 34),
        (0xbf, 752),
        (0xc0, 175),
        (0xc1, 76),
        (0xc2, 59),
        (0xc3, 177),
        (0xc4, 110),
        (0xc5, 67),
        (0xc6, 55),
        (0xc7, 38),
        (0xc8, 46),
        (0xc9, 55),
        (0xca, 15),
        (0xcb, 21),
        (0xcc, 40),
        (0xcd, 80),
        (0xce, 25),
        (0xcf, 13),
        (0xd0, 406),
        (0xd1, 449),
        (0xd2, 112),
        (0xd3, 244),
        (0xd4, 116),
        (0xd5, 67),
        (0xd6, 57),
        (0xd7, 59),
        (0xd8, 133),
        (0xd9, 143),
        (0xda, 69),
        (0xdb, 128),
        (0xdc, 42),
        (0xdd, 67),
        (0xde, 57),
        (0xdf, 72),
        (0xe0, 255),
        (0xe1, 42),
        (0xe2, 19),
        (0xe3, 42),
        (0xe4, 65),
        (0xe5, 15),
        (0xe6, 46),
        (0xe7, 693),
        (0xe8, 221),
        (0xe9, 293),
        (0xea, 181),
        (0xeb, 404),
        (0xec, 46),
        (0xed, 72),
        (0xee, 36),
        (0xef, 128),
        (0xf0, 1390),
        (0xf1, 318),
        (0xf2, 88),
        (0xf3, 634),
        (0xf4, 246),
        (0xf5, 175),
        (0xf6, 63),
        (0xf7, 499),
        (0xf8, 1470),
        (0xf9, 200),
        (0xfa, 177),
        (0xfb, 236),
        (0xfc, 114),
        (0xfd, 97),
        (0xfe, 187),
        (0xff, 847),
    ];

    Model::new(16, &symbols)
}
